<Form
  for={@changeset || ValueFlows.EconomicEvent.validate_changeset()}
  opts={autocomplete: "off"}
  submit="ValueFlows.EconomicEvent:create"
  change="Bonfire.UI.ValueFlows.CreateEconomicEventLive:autocomplete"
>
  <HiddenInput name="action" value={@action} />
  <HiddenInput :if={@input_of_id} name="input_of_id" value={e(@input_of_id, "")} />
  <HiddenInput :if={@output_of_id} name="output_of_id" value={e(@output_of_id, "")} />

  <div data-id="create_event_title" class="flex items-center p-3 pb-6 border-b">
    <div :if={@action == "produce"} class="flex-1 p-2 pb-0">
      <div class="text-base font-extrabold text-base-content opacity-80">{l("Produce a resource")}</div>
      <div class="mt-1 text-sm text-base-content opacity-60 font-regular">{l("Specify the resource you want to produce")}</div>
    </div>
    <div :if={@action == "raise"} class="flex-1 p-2 pb-0">
      <div class="text-base font-extrabold text-base-content opacity-80">{l("Add a resource to inventory")}</div>
      <div class="mt-1 text-sm text-base-content opacity-60 font-regular">{l("Specify the resource you want to add")}</div>
    </div>
    <div :if={@action == "transfer"} class="flex-1 p-2 pb-0">
      <div class="text-base font-extrabold text-base-content opacity-80">{l("Transfer a resource")}</div>
      <div class="mt-1 text-sm text-base-content opacity-60 font-regular">{l("Indicate which resource you want to transfer to another user")}</div>
    </div>
    <div :if={@action == "use"} class="flex-1 p-2 pb-0">
      <div class="text-base font-extrabold text-base-content opacity-80">{l("Use a resource")}</div>
      <div class="mt-1 text-sm text-base-content opacity-60 font-regular">{l("Indicate which resource you want to use")}</div>
    </div>
    <div :if={@action == "consume"} class="flex-1 p-2 pb-0">
      <div class="text-base font-extrabold text-base-content opacity-80">{l("Consume a resource")}</div>
      <div class="mt-1 text-sm text-base-content opacity-60 font-regular">{l("Indicate which resource you want to consume")}</div>
    </div>
    <div :if={@action == "lower"} class="flex-1 p-2 pb-0">
      <div class="text-base font-extrabold text-base-content opacity-80">{l("Remove a resource from iventory")}</div>
      <div class="mt-1 text-sm text-base-content opacity-60 font-regular">{l("Indicate which resource you want to lower")}</div>
    </div>

    <svg
      @click={@remove}
      xmlns="http://www.w3.org/2000/svg"
      class="w-10 h-10 cursor-pointer hover:text-opacity-90 text-opacity-70"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="1"
        d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
      />
    </svg>
  </div>
  <div class="p-3">
    <div class="p-3 shadow-inner rounded-xl bg-base-200">
      <div :if={@action in ["produce", "raise"]}>
        <div class="flex space-x-2">
          <div class="flex flex-1 space-x-4">
            <!-- <div class="relative block w-32 h-32 mb-4 overflow-hidden rounded-md ring-4 ring-white">
              <div class="flex items-center w-32 h-32 bg-cover rounded-md shadow-lg place-content-center " style="background-image: url('')">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8 text-base-content opacity-60" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd" />
                </svg>
              </div>
              <label for="" class="absolute inset-0 flex items-center justify-center w-full h-full text-sm font-medium text-white transition duration-150 ease-in-out bg-base-100 bg-opacity-40 opacity-0 cursor-pointer hover:opacity-60 focus-within:opacity-60">
                <span>Upload or drop</span>
                <span class="sr-only"> avatar</span>
                
              </label>
            </div> -->
            <div class="relative flex-1">
              <Bonfire.UI.Common.MultiselectLive
                id="resource_conforms_to"
                preloaded_options={@resource_specifications_autocomplete}
                selected_options={@resource_specification_selected}
                label="Pick a type of resource..."
                form_input_name="resource_conforms_to"
                pick_event={e(@pick_event, "ValueFlows.Knowledge.ResourceSpecification:select")}
                remove_event={@remove_event}
                focus_event="ValueFlows.Knowledge.ResourceSpecification:autocomplete"
              />

              <div id="event_quantity" phx-update="ignore" class="flex mt-3 space-x-2">
                <Inputs for={:resource_quantity}>
                  <div class="w-20">
                    <Field
                      name={:has_numerical_value}
                      class="relative flex items-stretch flex-grow focus-within:z-10"
                    >
                      <NumberInput
                        opts={placeholder: "00.00", step: "any"}
                        class="flex-1 block w-full font-bold text-base-content opacity-80 placeholder-gray-600 bg-base-100 border-gray-300 rounded-md shadow-sm text-opacity-60 placeholder-opacity-60 focus:ring-secondary-500 focus:border-indigo-500 sm:text-sm"
                        placeholder="0.0"
                      />
                      <ErrorTag class="p-3 bg-error-300" />
                    </Field>
                  </div>
                  <Field name={:has_unit} class="flex-1">
                    <Select
                      options={@units}
                      class="flex-1 block w-full font-bold text-base-content opacity-80 bg-base-100 border-gray-300 rounded-md shadow-sm text-opacity-60 placeholder-opacity-60 focus:ring-secondary-500 focus:border-indigo-500 sm:text-sm"
                    />
                    <ErrorTag />
                  </Field>
                </Inputs>
              </div>
              <!-- <div class="mt-2">
                  <Bonfire.UI.Common.MultiselectLive
                    preloaded_options={e(@resource_specifications_autocomplete, [])}
                    selected_options={e(@resource_specification_selected, [])}
                    label={"Add to one or more categories"}
                    form_input_name={"resource_conforms_to"}
                    pick_event={e(@pick_event, "ValueFlows.Knowledge.ResourceSpecification:select")}
                    remove_event={@remove_event}
                    />
                </div> -->
            </div>
          </div>
        </div>
        <div id="resource_note" phx-update="ignore" class="mt-3">
          <label class="block mt-2 text-sm text-base-content">{l("Add a resource description")}</label>
          <Field
            name={:resource_note}
            class="flex flex-col p-3 mt-1 bg-base-100 border shadow-sm rounded-xl"
          >
            <TextArea
              placeholder="Add an optional resource description"
              class="flex-1 h-20 text-sm textarea border-none font-regular placeholder-opacity-60"
            />
          </Field>
        </div>
      </div>

      <div :if={@action not in ["produce", "raise"]} class="flex space-x-3">
        <div
          :if={@action in ["transfer", "consume", "lower"]}
          id="event_quantity"
          phx-update="ignore"
          class="flex items-start space-x-2"
        >
          <Inputs for={:resource_quantity}>
            <div class="w-20">
              <Field
                name={:has_numerical_value}
                class="relative flex items-stretch flex-grow focus-within:z-10"
              >
                <NumberInput
                  opts={placeholder: "00.00", step: "any"}
                  class="flex-1 block w-full font-bold text-base-content opacity-80 bg-base-100 border-gray-300 rounded-md shadow-sm text-opacity-60 placeholder-opacity-60 focus:ring-secondary-500 focus:border-indigo-500 sm:text-sm"
                  placeholder="0.0"
                />
              </Field>
            </div>
            <Field name={:has_unit}>
              <Select
                options={@units}
                class="flex-1 block w-full font-bold text-base-content opacity-80 bg-base-100 border-gray-300 rounded-md shadow-sm text-opacity-60 placeholder-opacity-60 focus:ring-secondary-500 focus:border-indigo-500 sm:text-sm"
              />
            </Field>
          </Inputs>
        </div>

        <div class="relative flex-1">
          <Bonfire.UI.Common.MultiselectLive
            id="resource_inventoried_as"
            preloaded_options={@economic_resources_autocomplete}
            selected_options={@economic_resource_selected}
            label="Pick a resource..."
            form_input_name="resource_inventoried_as"
            pick_event={e(@pick_event, "ValueFlows.EconomicResource:select")}
            remove_event={@remove_event}
            focus_event="ValueFlows.EconomicResource:autocomplete"
          />
        </div>
      </div>
    </div>

    <svg
      :if={@action == "transfer"}
      xmlns="http://www.w3.org/2000/svg"
      class="w-8 h-8 mx-auto my-4 text-indigo-400"
      viewBox="0 0 20 20"
      fill="currentColor"
    >
      <path
        fill-rule="evenodd"
        d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z"
        clip-rule="evenodd"
      />
    </svg>

    <div :if={@action == "transfer"} class="flex flex-col">
      <Bonfire.UI.Common.MultiselectLive.UserSelectorLive
        label="Select the receiver of the transfer"
        form_input_name="receiver"
        preloaded_options={@users_autocomplete}
        selected_options={@receiver}
      />
    </div>

    <div id="event_note" phx-update="ignore" class="mt-3">
      <Field name={:note} class="flex flex-col p-3 rounded-xl bg-base-200">
        <label class="block text-sm text-base-content">{l("Add an optional note about the event")}</label>
        <TextArea
          placeholder="Add an optional message for the transfer"
          class="flex-1 h-20 mt-1 text-sm textarea border-none font-regular placeholder-opacity-60"
        />
      </Field>
    </div>

    <div :if={@action in ["transfer", "produce", "raise"]} class="relative mt-3">
      <Bonfire.UI.Common.MultiselectLive
        id="at_location"
        preloaded_options={@geolocation_autocomplete}
        selected_options={@geolocation_selected}
        label="Optionally indicate the location"
        form_input_name="at_location"
        pick_event={e(@pick_event, "Bonfire.Geolocate:select")}
        remove_event={@remove_event}
        focus_event="Bonfire.Geolocate:autocomplete"
      />
    </div>

    {#for component <- e(@extra_components, [])}
      <Dynamic.Component module={component} />
    {/for}

    <div>{@form_error}</div>

    <button
      type="submit"
      class="inline-flex items-center w-full px-6 py-3 mt-3 text-base font-medium text-white bg-indigo-600 border border-transparent rounded-full shadow-sm place-content-center hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-secondary-500"
    >
      {@action}
    </button>
  </div>
</Form>
