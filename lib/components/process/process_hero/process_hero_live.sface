<div class="relative p-6 mb-6 border-b border-base-content/10">
  <div class="z-50 flex items-center justify-between mb-5 top-6">
    <div class="flex items-center gap-3">
      <LiveRedirect to="/lists" class="btn btn-xs btn-circle btn-ghost">
        <Icon outline="ArrowLeft" class="w-4 h-4 text-base-content" />
      </LiveRedirect>
      <span class="hidden text-sm font-medium tracking-wide md:block text-base-content/60">{l("All lists")}</span>
    </div>
    <div class="flex items-center gap-4">
      <span :if={!@process.finished} class="badge badge-outline border-base-content/40">
        {l("Open")}
      </span>
      <span :if={@process.finished} class="badge badge-accent badge-success">
        {l("Completed")}
      </span>
      <Bonfire.UI.Common.LikeActionLive
        id={ComponentID.new(Bonfire.UI.Common.LikeActionLive, @process)}
        object={@process}
      />
      <Bonfire.UI.Social.Activity.InstanceIconLive object={@process} />
      <Bonfire.Boundaries.Web.BoundaryIconLive
        with_label
        id={ComponentID.new(Bonfire.Boundaries.Web.BoundaryIconLive, @process)}
        object={@process}
      />

      <div class="relative inline-block text-left">
        <div
          x-data="{ 
            open_process_dropdown: false, 
            edit_process: false, 
            archive_process: false, 
            tests_template: false 
          }"
          @keydown.escape.stop="open_process_dropdown = false"
          @click.outside="open_process_dropdown = false"
          class="relative block text-left"
        >
          <button
            @click="open_process_dropdown = !open_process_dropdown"
            aria-haspopup="true"
            type="button"
            class="btn btn-ghost btn-sm btn-circle"
          >
            <span class="sr-only">{l("Open_process_dropdown options")}</span>
            <!-- Heroicon name: solid/dots-vertical -->
            <Icon solid="DotsVertical" class="w-4 h-4" />
          </button>
          <div
            x-description="process dropdown menu, show/hide based on menu state."
            x-show="open_process_dropdown"
            x-transition:enter="transition ease-out duration-100"
            x-transition:enter-start="transform opacity-0 scale-95"
            x-transition:enter-end="transform opacity-60 scale-100"
            x-transition:leave="transition ease-in duration-75"
            x-transition:leave-start="transform opacity-60 scale-100"
            x-transition:leave-end="transform opacity-0 scale-95"
            class="absolute right-0 z-20 w-56 mt-2 origin-top-left divide-y divide-gray-100 rounded-md shadow-lg bg-base-100 ring-1 ring-black ring-opacity-5 focus:outline-none"
            role="menu"
            aria-orientation="vertical"
          >
            <div class="py-1" role="none">
              <button
                type="button"
                @click="edit_process=true"
                class="block w-full px-4 py-2 text-sm text-left transition duration-150 ease-in-out text-base-content opacity-70 hover:bg-neutral hover:bg-opacity-30"
              >
                {l("Edit process")}
              </button>
              <button
                :if={!@process.finished}
                :on-click="ValueFlows.Process:status:finished"
                phx-value-id={e(@process, :id, nil)}
                type="button"
                class="block w-full px-4 py-2 text-sm text-left transition duration-150 ease-in-out text-base-content opacity-70 hover:bg-neutral hover:bg-opacity-30"
              >
                {l("Set as completed")}
              </button>
              <button
                :if={@process.finished}
                :on-click="ValueFlows.Process:status:unfinished"
                phx-value-id={e(@process, :id, nil)}
                type="button"
                class="block w-full px-4 py-2 text-sm text-left transition duration-150 ease-in-out text-base-content opacity-70 hover:bg-neutral hover:bg-opacity-30"
              >
                {l("Set as open")}
              </button>
              <!-- <button type="button" @click="tests_template=true" class="block w-full px-4 py-2 text-sm text-left transition duration-150 ease-in-out text-base-content opacity-70 hover:bg-neutral hover:bg-opacity-30 ">
                {l "Generate tests template"}
              </button> -->
            </div>
            <!-- <div class="py-1" role="none">
              <button type="button" @click="archive_process=true" class="block w-full px-4 py-2 text-sm text-left transition duration-150 ease-in-out text-base-content opacity-70 hover:bg-neutral hover:bg-opacity-30 ">
                Archive
              </button>
            </div> -->
          </div>
          <div
            x-cloak
            x-show="edit_process"
            class="fixed inset-0 z-10 overflow-y-auto"
            aria-labelledby="modal-title"
            x-ref="dialog"
            aria-modal="true"
          >
            <div class="flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
              <div
                x-show="edit_process"
                x-transition:enter="ease-out duration-300"
                x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-60"
                x-transition:leave="ease-in duration-200"
                x-transition:leave-start="opacity-60"
                x-transition:leave-end="opacity-0"
                x-description="Background overlay, show/hide based on modal state."
                class="fixed inset-0 transition-opacity bg-base-100 bg-opacity-40"
                @click="edit_process = false"
                aria-hidden="true"
              />
              <!-- This element is to trick the browser into centering the modal contents. -->
              <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
              <div
                x-show="edit_process"
                x-transition:enter="ease-out duration-300"
                x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                x-transition:enter-end="opacity-60 translate-y-0 sm:scale-100"
                x-transition:leave="ease-in duration-200"
                x-transition:leave-start="opacity-60 translate-y-0 sm:scale-100"
                x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                x-description="Modal panel, show/hide based on modal state."
                class="inline-block px-4 pt-5 pb-4 text-left align-bottom transition-all transform rounded-lg shadow-xl bg-base-100 sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6"
              >
                <Bonfire.UI.ValueFlows.EditProcessLive process={@process} />
              </div>
            </div>
          </div>
          <div
            x-show="archive_process"
            class="fixed inset-0 z-10 overflow-y-auto"
            aria-labelledby="modal-title"
            x-ref="dialog"
            aria-modal="true"
          >
            <div class="flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
              <div
                x-show="archive_process"
                x-transition:enter="ease-out duration-300"
                x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-60"
                x-transition:leave="ease-in duration-200"
                x-transition:leave-start="opacity-60"
                x-transition:leave-end="opacity-0"
                x-description="Background overlay, show/hide based on modal state."
                class="fixed inset-0 transition-opacity bg-base-100 bg-opacity-40"
                @click="archive_process = false"
                aria-hidden="true"
              />
              <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
              <div
                x-show="archive_process"
                x-transition:enter="ease-out duration-300"
                x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                x-transition:enter-end="opacity-60 translate-y-0 sm:scale-100"
                x-transition:leave="ease-in duration-200"
                x-transition:leave-start="opacity-60 translate-y-0 sm:scale-100"
                x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                x-description="Modal panel, show/hide based on modal state."
                class="inline-block overflow-hidden text-left align-bottom transition-all transform rounded-lg shadow-xl bg-base-100 sm:my-8 sm:align-middle sm:max-w-lg sm:w-full"
              >
                <div class="px-4 pt-5 pb-4 bg-base-100 sm:p-6 sm:pb-4">
                  <div class="sm:flex sm:items-start">
                    <div class="flex items-center justify-center flex-shrink-0 w-12 h-12 mx-auto bg-red-100 rounded-full sm:mx-0 sm:h-10 sm:w-10">
                      <!-- Heroicon name: outline/exclamation -->
                      <svg
                        class="w-6 h-6 text-red-600"
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                        aria-hidden="true"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                        />
                      </svg>
                    </div>
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                      <h3 class="text-lg font-medium leading-6 text-base-content opacity-90" id="modal-title">
                        {l("Archive the process")}
                      </h3>
                      <div class="mt-2">
                        <p class="text-sm text-base-content opacity-60">
                          {l("Are you sure you want to archive the process?")}
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="px-4 py-3 bg-base-100 sm:px-6 sm:flex sm:flex-row-reverse">
                  <button
                    type="button"
                    class="inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm"
                  >
                    {l("Archive")}
                  </button>
                  <button
                    type="button"
                    class="inline-flex justify-center w-full px-4 py-2 mt-3 text-base font-medium border border-gray-300 rounded-md shadow-sm text-base-content opacity-70 bg-base-100 hover:bg-neutral hover:bg-opacity-30 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-secondary-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
                  >
                    {l("Cancel")}
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="flex flex-col">
    <div class="flex items-start gap-4">
      <div class="flex flex-col">
        <span class="text-2xl font-semibold text-base-content">{e(@process, :name, "")}</span>
        <span
          :if={String.length(e(@process, :note, "")) > 0}
          class="mt-1 text-base font-normal prose text-base-content/70"
        >{e(@process, :note, "")}</span>
      </div>
    </div>
    <div class="flex mt-3">
      <Bonfire.UI.Common.SmartInputButtonLive
        component={Bonfire.UI.Coordination.CreateTaskLive}
        smart_input_prompt={l("Add task to list")}
        icon="heroicons-solid:pencil-alt"
      />
    </div>
  </div>
</div>
